{
  "JampbotCommand": {
    "scope": "typescript",
    "prefix": "command",
    "body": [
      "import { CommandOptions, Command } from 'discord-akairo';",
      "import { Message } from 'discord.js';",
      "import ApplyOptions from '../../lib/utils/ApplyOptions';",
      "",
      "@ApplyOptions<CommandOptions>('${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}', {",
      "  aliases: ['${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}'],",
      "  description: '',",
      "  category: '${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}'",
      "})",
      "export default class $TM_FILENAME_BASE extends Command {",
      "  public exec(message: Message): void {",
      "    // do something",
      "  }",
      "}",
      ""
    ],
    "description": "Creates a Command"
  },
  "JampbotListener": {
    "scope": "typescript",
    "prefix": "listener",
    "body": [
      "import { Listener, ListenerOptions } from 'discord-akairo';",
      "import ApplyOptions from '../../lib/utils/ApplyOptions';",
      "",
      "@ApplyOptions<ListenerOptions>('${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}', {",
      "  emitter: '${TM_DIRECTORY/^.+\\/(.*)$/$1/}',",
      "  event: '${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}',",
      "  category: '${TM_DIRECTORY/^.+\\/(.*)$/$1/}',",
      "})",
      "export default class $TM_FILENAME_BASE extends Listener {",
      "  public exec(): void {",
      "    // do something",
      "  }",
      "}",
      ""
    ]
  },
  "JampbotInhibitor": {
    "scope": "typescript",
    "prefix": "inhibitor",
    "body": [
      "import { Inhibitor, InhibitorOptions } from '@sapphire/framework';",
      "import { Message } from 'discord.js';",
      "import ApplyOptions from '../../lib/utils/ApplyOptions';",
      "",
      "@ApplyOptions<InhibitorOptions>('${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}', { reason: '${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}' })",
      "export default class $TM_FILENAME_BASE extends Precondition {",
      "  public exec(message: Message): void {",
      "    // do something",
      "  }",
      "}",
      ""
    ]
  }
}
